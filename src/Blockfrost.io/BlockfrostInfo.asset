%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 7653c2c134e8c476da620e6b23ecf1df, type: 3}
  m_Name: BlockfrostInfo
  m_EditorClassIdentifier: 
  Title: Blockfrost.io ~ API Documentation
  Description: "Blockfrost is an API as a service that allows users to interact with
    the Cardano blockchain and parts of its ecosystem.\n\n## Tokens\n\nAfter signing
    up on https://blockfrost.io, a `project_id` token is automatically generated
    for each project.\nHTTP header of your request MUST include this `project_id`
    in order to authenticate against Blockfrost servers.\n\n## Available networks\n\nAt
    the moment, you can use the following networks. Please, note that each network
    has its own `project_id`.\n\n<table>\n  <tr><td><b>Network</b></td><td><b>Endpoint</b></td></tr>\n 
    <tr><td>Cardano mainnet</td><td><tt>https://cardano-mainnet.blockfrost.io/api/v0</td></tt></tr>\n 
    <tr><td>Cardano testnet</td><td><tt>https://cardano-testnet.blockfrost.io/api/v0</tt></td></tr>\n 
    <tr><td>InterPlanetary File System</td><td><tt>https://ipfs.blockfrost.io/api/v0</tt></td></tr>\n 
    <tr><td>Milkomeda mainnet</td><td><tt>https://milkomeda-mainnet.blockfrost.io/api/v0</td></tt></tr>\n 
    <tr><td>Milkomeda testnet</td><td><tt>https://milkomeda-testnet.blockfrost.io/api/v0</td></tt></tr>\n</table>\n\n##
    Milkomeda\n\nFor more information about how to use Milkomeda as well as the list
    of available endpoints, see the\n<a href=\"https://blockfrost.dev/docs/start-building/milkomeda\">Milkomeda
    section on blockfrost.dev</a>.\n\n## Concepts\n\n* All endpoints return either
    a JSON object or an array.\n* Data is returned in *ascending* (oldest first,
    newest last) order, if not stated otherwise.\n  * You might use the `?order=desc`
    query parameter to reverse this order.\n* By default, we return 100 results at
    a time. You have to use `?page=2` to list through the results.\n* All time and
    timestamp related fields (except `server_time`) are in seconds of UNIX time.\n*
    All amounts are returned in Lovelaces, where 1 ADA = 1 000 000 Lovelaces.\n*
    Addresses, accounts and pool IDs are in Bech32 format.\n* All values are case
    sensitive.\n* All hex encoded values are lower case.\n* Examples are not based
    on real data. Any resemblance to actual events is purely coincidental.\n* We
    allow to upload files up to 100MB of size to IPFS. This might increase in the
    future.\n\n## Errors\n\n### HTTP Status codes\n\nThe following are HTTP status
    code your application might receive when reaching Blockfrost endpoints and\nit
    should handle all of these cases.\n\n* HTTP `400` return code is used when the
    request is not valid.\n* HTTP `402` return code is used when the projects exceed
    their daily request limit.\n* HTTP `403` return code is used when the request
    is not authenticated.\n* HTTP `404` return code is used when the resource doesn't
    exist.\n* HTTP `418` return code is used when the user has been auto-banned for
    flooding too much after previously receiving error code `402` or `429`.\n* HTTP
    `425` return code is used when the user has submitted a transaction when the
    mempool is already full, not accepting new txs straight away.\n* HTTP `429` return
    code is used when the user has sent too many requests in a given amount of time
    and therefore has been rate-limited.\n* HTTP `500` return code is used when our
    endpoints are having a problem.\n\n### Error codes\n\nAn internal error code
    number is used for better indication of the error in question. It is passed using
    the following payload.\n\n```json\n{\n  \"status_code\": 403,\n  \"error\": \"Forbidden\",\n 
    \"message\": \"Invalid project token.\"\n}\n```\n## Limits\n\nThere are two types
    of limits we are enforcing:\n\nThe first depends on your plan and is the number
    of request we allow per day. We defined the day from midnight to midnight of
    UTC time.\n\nThe second is rate limiting. We limit an end user, distinguished
    by IP address, to 10 requests per second. On top of that, we allow\neach user
    to send burst of 500 requests, which cools off at rate of 10 requests per second.
    In essence, a user is allowed to make another\nwhole burst after (currently)
    500/10 = 50 seconds. E.g. if a user attemtps to make a call 3 seconds after whole
    burst, 30 requests will be processed.\nWe believe this should be sufficient for
    most of the use cases. If it is not and you have a specific use case, please
    get in touch with us, and\nwe will make sure to take it into account as much
    as we can.\n\n## SDKs\n\nWe support a number of SDKs that will help you in developing
    your application on top of Blockfrost.\n\n<table>\n  <tr><td><b>Programming language</b></td><td><b>SDK</b></td></tr>\n 
    <tr><td>JavaScript</td><td><a href=\"https://github.com/blockfrost/blockfrost-js\">blockfrost-js</a></tr>\n 
    <tr><td>Haskell</td><td><a href=\"https://github.com/blockfrost/blockfrost-haskell\">blockfrost-haskell</a></tr>\n 
    <tr><td>Python</td><td><a href=\"https://github.com/blockfrost/blockfrost-python\">blockfrost-python</a></tr>\n 
    <tr><td>Rust</td><td><a href=\"https://github.com/blockfrost/blockfrost-rust\">blockfrost-rust</a></tr>\n 
    <tr><td>Golang</td><td><a href=\"https://github.com/blockfrost/blockfrost-go\">blockfrost-go</a></tr>\n 
    <tr><td>Ruby</td><td><a href=\"https://github.com/blockfrost/blockfrost-ruby\">blockfrost-ruby</a></tr>\n 
    <tr><td>Java</td><td><a href=\"https://github.com/blockfrost/blockfrost-java\">blockfrost-java</a></tr>\n 
    <tr><td>Scala</td><td><a href=\"https://github.com/blockfrost/blockfrost-scala\">blockfrost-scala</a></tr>\n 
    <tr><td>Swift</td><td><a href=\"https://github.com/blockfrost/blockfrost-swift\">blockfrost-swift</a></tr>\n 
    <tr><td>Kotlin</td><td><a href=\"https://github.com/blockfrost/blockfrost-kotlin\">blockfrost-kotlin</a></tr>\n 
    <tr><td>Elixir</td><td><a href=\"https://github.com/blockfrost/blockfrost-elixir\">blockfrost-elixir</a></tr>\n 
    <tr><td>.NET</td><td><a href=\"https://github.com/blockfrost/blockfrost-dotnet\">blockfrost-dotnet</a></tr>\n 
    <tr><td>Arduino</td><td><a href=\"https://github.com/blockfrost/blockfrost-arduino\">blockfrost-arduino</a></tr>\n</table>\n"
  Version: 0.1.39
  TermsOfService: https://blockfrost.io/terms
  Contact:
    Name: Blockfrost Team
    Url: https://blockfrost.io/
    Email: contact@blockfrost.io
  License:
    Name: MIT
    Url: https://opensource.org/licenses/MIT
